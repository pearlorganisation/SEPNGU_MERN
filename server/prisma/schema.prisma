generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique 
  name String
  profilePicture String @default("")
  about String @default("")
  sentMessages Messages[] @relation("sentMessages")
  recievedMessages Messages[] @relation("recievedMessages")
  subscriptions   Subscription[]  @relation("UserToSubscription") // Add relation name
}

model Messages {
  id Int @id @default(autoincrement())
  sender User @relation("sentMessages",fields:[senderId],references: [id])
  senderId Int // It is a foreign key pointing to a specific user in the User table.
  reciever User @relation("recievedMessages",fields:[recieverId],references: [id])
  recieverId Int
  type String @default("text")
  message String
  messageStatus String @default("sent")
  createdAt DateTime @default(now())
}

model Subscription {
  id              Int      @id @default(autoincrement())
  userId          Int?     @unique
  user            User?    @relation("UserToSubscription", fields: [userId], references: [id]) // Add relation name
  subscriptionId  String   @unique // Razorpay Subscription ID
  planId          String   // Plan under which subscription was created
  status          SubscriptionStatus @default(CREATED)
  email           String  // Store email if user isn't logged in yet
  phone           String  // Store phone number if user isn't logged in yet
  startDate       DateTime @default(now()) 
  endDate         DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

enum SubscriptionStatus {
  CREATED
  ACTIVE
  COMPLETED
  CANCELLED
  EXPIRED
}